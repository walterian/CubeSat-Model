-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\simulink_implementation\HDL_DUT.vhd
-- Created: 2019-12-29 14:04:17
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 3.84615e-08
-- Target subsystem base rate: 3.84615e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.0001
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- data_out                      ce_out        0.0001
-- valid_out                     ce_out        0.0001
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: HDL_DUT
-- Source Path: simulink_implementation/HDL_DUT
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HDL_DUT_pkg.ALL;

ENTITY HDL_DUT IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        data_in                           :   IN    vector_of_std_logic_vector12(0 TO 99);  -- sfix12_En10 [100]
        ce_out                            :   OUT   std_logic;
        data_out                          :   OUT   std_logic_vector(42 DOWNTO 0);  -- sfix43_En32
        valid_out                         :   OUT   std_logic
        );
END HDL_DUT;


ARCHITECTURE rtl OF HDL_DUT IS

  -- Component Declarations
  COMPONENT HDL_DUT_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb                             :   OUT   std_logic;
          enb_1_2600_0                    :   OUT   std_logic;
          enb_1_2600_1                    :   OUT   std_logic;
          enb_1_2600_4                    :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : HDL_DUT_tc
    USE ENTITY work.HDL_DUT_tc(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_2600_0                     : std_logic;
  SIGNAL enb_1_2600_4                     : std_logic;
  SIGNAL enb_1_2600_1                     : std_logic;
  SIGNAL Counter_Limited_out1             : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL delayMatch1_reg                  : std_logic_vector(0 TO 2);  -- ufix1 [3]
  SIGNAL Compare_To_Constant_out1_1       : std_logic;
  SIGNAL Compare_To_Constant_out1_bool    : std_logic;
  SIGNAL Compare_To_Constant_out1N        : std_logic;
  SIGNAL Compare_To_Constant_out1N_delay  : std_logic;
  SIGNAL Compare_To_Constant_out1_fEdge   : std_logic;
  SIGNAL delayMatch_reg                   : std_logic_vector(0 TO 1);  -- ufix1 [2]
  SIGNAL Compare_To_Constant_out1_fEdge_1 : std_logic;
  SIGNAL data_in_99                       : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL sliceVec2Reg                     : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL Delay1_out1                      : vector_of_signed12(0 TO 99);  -- sfix12_En10 [100]
  SIGNAL Data_Type_Conversion_out1        : vector_of_signed18(0 TO 99);  -- sfix18_En16 [100]
  SIGNAL Data_Type_Conversion_out1_1      : vector_of_signed18(0 TO 99);  -- sfix18_En16 [100]
  SIGNAL Product_out1                     : vector_of_signed36(0 TO 99);  -- sfix36_En32 [100]
  SIGNAL Product_out1_1                   : vector_of_signed36(0 TO 99);  -- sfix36_En32 [100]
  SIGNAL Sum_of_Elements_add_cast         : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_1       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp         : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_2       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_1       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_3       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_2       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_4       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_3       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_5       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_4       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_6       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_5       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_7       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_6       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_8       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_7       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_9       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_8       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_10      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_9       : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_11      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_10      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_12      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_11      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_13      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_12      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_14      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_13      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_15      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_14      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_16      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_15      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_17      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_16      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_18      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_17      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_19      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_18      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_20      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_19      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_21      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_20      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_22      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_21      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_23      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_22      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_24      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_23      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_25      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_24      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_26      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_25      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_27      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_26      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_28      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_27      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_29      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_28      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_30      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_29      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_31      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_30      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_32      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_31      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_33      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_32      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_34      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_33      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_35      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_34      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_36      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_35      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_37      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_36      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_38      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_37      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_39      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_38      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_40      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_39      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_41      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_40      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_42      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_41      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_43      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_42      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_44      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_43      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_45      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_44      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_46      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_45      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_47      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_46      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_48      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_47      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_49      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_48      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_50      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_49      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_51      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_50      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_52      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_51      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_53      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_52      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_54      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_53      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_55      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_54      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_56      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_55      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_57      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_56      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_58      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_57      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_59      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_58      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_60      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_59      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_61      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_60      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_62      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_61      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_63      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_62      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_64      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_63      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_65      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_64      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_66      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_65      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_67      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_66      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_68      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_67      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_69      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_68      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_70      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_69      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_71      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_70      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_72      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_71      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_73      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_72      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_74      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_73      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_75      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_74      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_76      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_75      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_77      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_76      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_78      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_77      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_79      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_78      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_80      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_79      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_81      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_80      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_82      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_81      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_83      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_82      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_84      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_83      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_85      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_84      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_86      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_85      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_87      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_86      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_88      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_87      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_89      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_88      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_90      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_89      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_91      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_90      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_92      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_91      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_93      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_92      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_94      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_93      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_95      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_94      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_96      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_95      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_97      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_96      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_98      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_temp_97      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_add_cast_99      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Sum_of_Elements_out1             : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Constant_out1                    : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Divide_out1                      : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Divide_out1_dlyBalance           : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Discrete_Time_Integrator_reg_iv  : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Discrete_Time_Integrator_x_reg   : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Discrete_Time_Integrator_u_add   : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Discrete_Time_Integrator_u_sat   : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Discrete_Time_Integrator_reg_toDel : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Unit_Delay_Enabled_Synchronous_out1 : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Unit_Delay_Enabled_Synchronous_ectrl : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Constant2_out1                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL d2                               : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Rate_Transition_ds_out           : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Rate_Transition_out1             : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Rate_Transition_out1_1           : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL data_out_tmp                     : signed(42 DOWNTO 0);  -- sfix43_En32
  SIGNAL Compare_To_Zero_out1             : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL d2_1                             : signed(42 DOWNTO 0);  -- sfix43_En32

BEGIN
  u_HDL_DUT_tc : HDL_DUT_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb => enb,
              enb_1_2600_0 => enb_1_2600_0,
              enb_1_2600_1 => enb_1_2600_1,
              enb_1_2600_4 => enb_1_2600_4
              );

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 2600
  Counter_Limited_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Counter_Limited_out1 <= to_unsigned(16#0000#, 16);
      ELSIF enb = '1' THEN
        IF Counter_Limited_out1 >= to_unsigned(16#0A28#, 16) THEN 
          Counter_Limited_out1 <= to_unsigned(16#0000#, 16);
        ELSE 
          Counter_Limited_out1 <= Counter_Limited_out1 + to_unsigned(16#0001#, 16);
        END IF;
      END IF;
    END IF;
  END PROCESS Counter_Limited_process;


  
  Compare_To_Constant_out1 <= '1' WHEN Counter_Limited_out1 = to_unsigned(16#0A28#, 16) ELSE
      '0';

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch1_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch1_reg(0) <= Compare_To_Constant_out1;
        delayMatch1_reg(1 TO 2) <= delayMatch1_reg(0 TO 1);
      END IF;
    END IF;
  END PROCESS delayMatch1_process;

  Compare_To_Constant_out1_1 <= delayMatch1_reg(2);

  
  Compare_To_Constant_out1_bool <= '1' WHEN Compare_To_Constant_out1 /= '0' ELSE
      '0';

  Compare_To_Constant_out1N <=  NOT Compare_To_Constant_out1_bool;

  intdelay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Compare_To_Constant_out1N_delay <= '0';
      ELSIF enb = '1' THEN
        Compare_To_Constant_out1N_delay <= Compare_To_Constant_out1_bool;
      END IF;
    END IF;
  END PROCESS intdelay1_process;


  Compare_To_Constant_out1_fEdge <= Compare_To_Constant_out1N AND Compare_To_Constant_out1N_delay;

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        delayMatch_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch_reg(0) <= Compare_To_Constant_out1_fEdge;
        delayMatch_reg(1) <= delayMatch_reg(0);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  Compare_To_Constant_out1_fEdge_1 <= delayMatch_reg(1);

  data_in_99 <= signed(data_in(99));

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        sliceVec2Reg <= to_signed(16#000#, 12);
      ELSIF enb = '1' THEN
        sliceVec2Reg <= data_in_99;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Delay1_out1(0) <= sliceVec2Reg;
  Delay1_out1(1) <= signed(data_in(0));
  Delay1_out1(2) <= signed(data_in(1));
  Delay1_out1(3) <= signed(data_in(2));
  Delay1_out1(4) <= signed(data_in(3));
  Delay1_out1(5) <= signed(data_in(4));
  Delay1_out1(6) <= signed(data_in(5));
  Delay1_out1(7) <= signed(data_in(6));
  Delay1_out1(8) <= signed(data_in(7));
  Delay1_out1(9) <= signed(data_in(8));
  Delay1_out1(10) <= signed(data_in(9));
  Delay1_out1(11) <= signed(data_in(10));
  Delay1_out1(12) <= signed(data_in(11));
  Delay1_out1(13) <= signed(data_in(12));
  Delay1_out1(14) <= signed(data_in(13));
  Delay1_out1(15) <= signed(data_in(14));
  Delay1_out1(16) <= signed(data_in(15));
  Delay1_out1(17) <= signed(data_in(16));
  Delay1_out1(18) <= signed(data_in(17));
  Delay1_out1(19) <= signed(data_in(18));
  Delay1_out1(20) <= signed(data_in(19));
  Delay1_out1(21) <= signed(data_in(20));
  Delay1_out1(22) <= signed(data_in(21));
  Delay1_out1(23) <= signed(data_in(22));
  Delay1_out1(24) <= signed(data_in(23));
  Delay1_out1(25) <= signed(data_in(24));
  Delay1_out1(26) <= signed(data_in(25));
  Delay1_out1(27) <= signed(data_in(26));
  Delay1_out1(28) <= signed(data_in(27));
  Delay1_out1(29) <= signed(data_in(28));
  Delay1_out1(30) <= signed(data_in(29));
  Delay1_out1(31) <= signed(data_in(30));
  Delay1_out1(32) <= signed(data_in(31));
  Delay1_out1(33) <= signed(data_in(32));
  Delay1_out1(34) <= signed(data_in(33));
  Delay1_out1(35) <= signed(data_in(34));
  Delay1_out1(36) <= signed(data_in(35));
  Delay1_out1(37) <= signed(data_in(36));
  Delay1_out1(38) <= signed(data_in(37));
  Delay1_out1(39) <= signed(data_in(38));
  Delay1_out1(40) <= signed(data_in(39));
  Delay1_out1(41) <= signed(data_in(40));
  Delay1_out1(42) <= signed(data_in(41));
  Delay1_out1(43) <= signed(data_in(42));
  Delay1_out1(44) <= signed(data_in(43));
  Delay1_out1(45) <= signed(data_in(44));
  Delay1_out1(46) <= signed(data_in(45));
  Delay1_out1(47) <= signed(data_in(46));
  Delay1_out1(48) <= signed(data_in(47));
  Delay1_out1(49) <= signed(data_in(48));
  Delay1_out1(50) <= signed(data_in(49));
  Delay1_out1(51) <= signed(data_in(50));
  Delay1_out1(52) <= signed(data_in(51));
  Delay1_out1(53) <= signed(data_in(52));
  Delay1_out1(54) <= signed(data_in(53));
  Delay1_out1(55) <= signed(data_in(54));
  Delay1_out1(56) <= signed(data_in(55));
  Delay1_out1(57) <= signed(data_in(56));
  Delay1_out1(58) <= signed(data_in(57));
  Delay1_out1(59) <= signed(data_in(58));
  Delay1_out1(60) <= signed(data_in(59));
  Delay1_out1(61) <= signed(data_in(60));
  Delay1_out1(62) <= signed(data_in(61));
  Delay1_out1(63) <= signed(data_in(62));
  Delay1_out1(64) <= signed(data_in(63));
  Delay1_out1(65) <= signed(data_in(64));
  Delay1_out1(66) <= signed(data_in(65));
  Delay1_out1(67) <= signed(data_in(66));
  Delay1_out1(68) <= signed(data_in(67));
  Delay1_out1(69) <= signed(data_in(68));
  Delay1_out1(70) <= signed(data_in(69));
  Delay1_out1(71) <= signed(data_in(70));
  Delay1_out1(72) <= signed(data_in(71));
  Delay1_out1(73) <= signed(data_in(72));
  Delay1_out1(74) <= signed(data_in(73));
  Delay1_out1(75) <= signed(data_in(74));
  Delay1_out1(76) <= signed(data_in(75));
  Delay1_out1(77) <= signed(data_in(76));
  Delay1_out1(78) <= signed(data_in(77));
  Delay1_out1(79) <= signed(data_in(78));
  Delay1_out1(80) <= signed(data_in(79));
  Delay1_out1(81) <= signed(data_in(80));
  Delay1_out1(82) <= signed(data_in(81));
  Delay1_out1(83) <= signed(data_in(82));
  Delay1_out1(84) <= signed(data_in(83));
  Delay1_out1(85) <= signed(data_in(84));
  Delay1_out1(86) <= signed(data_in(85));
  Delay1_out1(87) <= signed(data_in(86));
  Delay1_out1(88) <= signed(data_in(87));
  Delay1_out1(89) <= signed(data_in(88));
  Delay1_out1(90) <= signed(data_in(89));
  Delay1_out1(91) <= signed(data_in(90));
  Delay1_out1(92) <= signed(data_in(91));
  Delay1_out1(93) <= signed(data_in(92));
  Delay1_out1(94) <= signed(data_in(93));
  Delay1_out1(95) <= signed(data_in(94));
  Delay1_out1(96) <= signed(data_in(95));
  Delay1_out1(97) <= signed(data_in(96));
  Delay1_out1(98) <= signed(data_in(97));
  Delay1_out1(99) <= signed(data_in(98));


  Data_Type_Conversion_out1_gen: FOR ii IN 0 TO 99 GENERATE
    Data_Type_Conversion_out1(ii) <= Delay1_out1(ii) & '0' & '0' & '0' & '0' & '0' & '0';
  END GENERATE Data_Type_Conversion_out1_gen;


  reduced_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Data_Type_Conversion_out1_1 <= (OTHERS => to_signed(16#00000#, 18));
      ELSIF enb = '1' THEN
        Data_Type_Conversion_out1_1 <= Data_Type_Conversion_out1;
      END IF;
    END IF;
  END PROCESS reduced_process;



  Product_out1_gen: FOR t_0 IN 0 TO 99 GENERATE
    Product_out1(t_0) <= Data_Type_Conversion_out1_1(t_0) * Data_Type_Conversion_out1_1(t_0);
  END GENERATE Product_out1_gen;


  PipelineRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Product_out1_1 <= (OTHERS => to_signed(0, 36));
      ELSIF enb = '1' THEN
        Product_out1_1 <= Product_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  Sum_of_Elements_add_cast <= resize(Product_out1_1(0), 43);
  Sum_of_Elements_add_cast_1 <= resize(Product_out1_1(1), 43);
  Sum_of_Elements_add_temp <= Sum_of_Elements_add_cast + Sum_of_Elements_add_cast_1;
  Sum_of_Elements_add_cast_2 <= resize(Product_out1_1(2), 43);
  Sum_of_Elements_add_temp_1 <= Sum_of_Elements_add_temp + Sum_of_Elements_add_cast_2;
  Sum_of_Elements_add_cast_3 <= resize(Product_out1_1(3), 43);
  Sum_of_Elements_add_temp_2 <= Sum_of_Elements_add_temp_1 + Sum_of_Elements_add_cast_3;
  Sum_of_Elements_add_cast_4 <= resize(Product_out1_1(4), 43);
  Sum_of_Elements_add_temp_3 <= Sum_of_Elements_add_temp_2 + Sum_of_Elements_add_cast_4;
  Sum_of_Elements_add_cast_5 <= resize(Product_out1_1(5), 43);
  Sum_of_Elements_add_temp_4 <= Sum_of_Elements_add_temp_3 + Sum_of_Elements_add_cast_5;
  Sum_of_Elements_add_cast_6 <= resize(Product_out1_1(6), 43);
  Sum_of_Elements_add_temp_5 <= Sum_of_Elements_add_temp_4 + Sum_of_Elements_add_cast_6;
  Sum_of_Elements_add_cast_7 <= resize(Product_out1_1(7), 43);
  Sum_of_Elements_add_temp_6 <= Sum_of_Elements_add_temp_5 + Sum_of_Elements_add_cast_7;
  Sum_of_Elements_add_cast_8 <= resize(Product_out1_1(8), 43);
  Sum_of_Elements_add_temp_7 <= Sum_of_Elements_add_temp_6 + Sum_of_Elements_add_cast_8;
  Sum_of_Elements_add_cast_9 <= resize(Product_out1_1(9), 43);
  Sum_of_Elements_add_temp_8 <= Sum_of_Elements_add_temp_7 + Sum_of_Elements_add_cast_9;
  Sum_of_Elements_add_cast_10 <= resize(Product_out1_1(10), 43);
  Sum_of_Elements_add_temp_9 <= Sum_of_Elements_add_temp_8 + Sum_of_Elements_add_cast_10;
  Sum_of_Elements_add_cast_11 <= resize(Product_out1_1(11), 43);
  Sum_of_Elements_add_temp_10 <= Sum_of_Elements_add_temp_9 + Sum_of_Elements_add_cast_11;
  Sum_of_Elements_add_cast_12 <= resize(Product_out1_1(12), 43);
  Sum_of_Elements_add_temp_11 <= Sum_of_Elements_add_temp_10 + Sum_of_Elements_add_cast_12;
  Sum_of_Elements_add_cast_13 <= resize(Product_out1_1(13), 43);
  Sum_of_Elements_add_temp_12 <= Sum_of_Elements_add_temp_11 + Sum_of_Elements_add_cast_13;
  Sum_of_Elements_add_cast_14 <= resize(Product_out1_1(14), 43);
  Sum_of_Elements_add_temp_13 <= Sum_of_Elements_add_temp_12 + Sum_of_Elements_add_cast_14;
  Sum_of_Elements_add_cast_15 <= resize(Product_out1_1(15), 43);
  Sum_of_Elements_add_temp_14 <= Sum_of_Elements_add_temp_13 + Sum_of_Elements_add_cast_15;
  Sum_of_Elements_add_cast_16 <= resize(Product_out1_1(16), 43);
  Sum_of_Elements_add_temp_15 <= Sum_of_Elements_add_temp_14 + Sum_of_Elements_add_cast_16;
  Sum_of_Elements_add_cast_17 <= resize(Product_out1_1(17), 43);
  Sum_of_Elements_add_temp_16 <= Sum_of_Elements_add_temp_15 + Sum_of_Elements_add_cast_17;
  Sum_of_Elements_add_cast_18 <= resize(Product_out1_1(18), 43);
  Sum_of_Elements_add_temp_17 <= Sum_of_Elements_add_temp_16 + Sum_of_Elements_add_cast_18;
  Sum_of_Elements_add_cast_19 <= resize(Product_out1_1(19), 43);
  Sum_of_Elements_add_temp_18 <= Sum_of_Elements_add_temp_17 + Sum_of_Elements_add_cast_19;
  Sum_of_Elements_add_cast_20 <= resize(Product_out1_1(20), 43);
  Sum_of_Elements_add_temp_19 <= Sum_of_Elements_add_temp_18 + Sum_of_Elements_add_cast_20;
  Sum_of_Elements_add_cast_21 <= resize(Product_out1_1(21), 43);
  Sum_of_Elements_add_temp_20 <= Sum_of_Elements_add_temp_19 + Sum_of_Elements_add_cast_21;
  Sum_of_Elements_add_cast_22 <= resize(Product_out1_1(22), 43);
  Sum_of_Elements_add_temp_21 <= Sum_of_Elements_add_temp_20 + Sum_of_Elements_add_cast_22;
  Sum_of_Elements_add_cast_23 <= resize(Product_out1_1(23), 43);
  Sum_of_Elements_add_temp_22 <= Sum_of_Elements_add_temp_21 + Sum_of_Elements_add_cast_23;
  Sum_of_Elements_add_cast_24 <= resize(Product_out1_1(24), 43);
  Sum_of_Elements_add_temp_23 <= Sum_of_Elements_add_temp_22 + Sum_of_Elements_add_cast_24;
  Sum_of_Elements_add_cast_25 <= resize(Product_out1_1(25), 43);
  Sum_of_Elements_add_temp_24 <= Sum_of_Elements_add_temp_23 + Sum_of_Elements_add_cast_25;
  Sum_of_Elements_add_cast_26 <= resize(Product_out1_1(26), 43);
  Sum_of_Elements_add_temp_25 <= Sum_of_Elements_add_temp_24 + Sum_of_Elements_add_cast_26;
  Sum_of_Elements_add_cast_27 <= resize(Product_out1_1(27), 43);
  Sum_of_Elements_add_temp_26 <= Sum_of_Elements_add_temp_25 + Sum_of_Elements_add_cast_27;
  Sum_of_Elements_add_cast_28 <= resize(Product_out1_1(28), 43);
  Sum_of_Elements_add_temp_27 <= Sum_of_Elements_add_temp_26 + Sum_of_Elements_add_cast_28;
  Sum_of_Elements_add_cast_29 <= resize(Product_out1_1(29), 43);
  Sum_of_Elements_add_temp_28 <= Sum_of_Elements_add_temp_27 + Sum_of_Elements_add_cast_29;
  Sum_of_Elements_add_cast_30 <= resize(Product_out1_1(30), 43);
  Sum_of_Elements_add_temp_29 <= Sum_of_Elements_add_temp_28 + Sum_of_Elements_add_cast_30;
  Sum_of_Elements_add_cast_31 <= resize(Product_out1_1(31), 43);
  Sum_of_Elements_add_temp_30 <= Sum_of_Elements_add_temp_29 + Sum_of_Elements_add_cast_31;
  Sum_of_Elements_add_cast_32 <= resize(Product_out1_1(32), 43);
  Sum_of_Elements_add_temp_31 <= Sum_of_Elements_add_temp_30 + Sum_of_Elements_add_cast_32;
  Sum_of_Elements_add_cast_33 <= resize(Product_out1_1(33), 43);
  Sum_of_Elements_add_temp_32 <= Sum_of_Elements_add_temp_31 + Sum_of_Elements_add_cast_33;
  Sum_of_Elements_add_cast_34 <= resize(Product_out1_1(34), 43);
  Sum_of_Elements_add_temp_33 <= Sum_of_Elements_add_temp_32 + Sum_of_Elements_add_cast_34;
  Sum_of_Elements_add_cast_35 <= resize(Product_out1_1(35), 43);
  Sum_of_Elements_add_temp_34 <= Sum_of_Elements_add_temp_33 + Sum_of_Elements_add_cast_35;
  Sum_of_Elements_add_cast_36 <= resize(Product_out1_1(36), 43);
  Sum_of_Elements_add_temp_35 <= Sum_of_Elements_add_temp_34 + Sum_of_Elements_add_cast_36;
  Sum_of_Elements_add_cast_37 <= resize(Product_out1_1(37), 43);
  Sum_of_Elements_add_temp_36 <= Sum_of_Elements_add_temp_35 + Sum_of_Elements_add_cast_37;
  Sum_of_Elements_add_cast_38 <= resize(Product_out1_1(38), 43);
  Sum_of_Elements_add_temp_37 <= Sum_of_Elements_add_temp_36 + Sum_of_Elements_add_cast_38;
  Sum_of_Elements_add_cast_39 <= resize(Product_out1_1(39), 43);
  Sum_of_Elements_add_temp_38 <= Sum_of_Elements_add_temp_37 + Sum_of_Elements_add_cast_39;
  Sum_of_Elements_add_cast_40 <= resize(Product_out1_1(40), 43);
  Sum_of_Elements_add_temp_39 <= Sum_of_Elements_add_temp_38 + Sum_of_Elements_add_cast_40;
  Sum_of_Elements_add_cast_41 <= resize(Product_out1_1(41), 43);
  Sum_of_Elements_add_temp_40 <= Sum_of_Elements_add_temp_39 + Sum_of_Elements_add_cast_41;
  Sum_of_Elements_add_cast_42 <= resize(Product_out1_1(42), 43);
  Sum_of_Elements_add_temp_41 <= Sum_of_Elements_add_temp_40 + Sum_of_Elements_add_cast_42;
  Sum_of_Elements_add_cast_43 <= resize(Product_out1_1(43), 43);
  Sum_of_Elements_add_temp_42 <= Sum_of_Elements_add_temp_41 + Sum_of_Elements_add_cast_43;
  Sum_of_Elements_add_cast_44 <= resize(Product_out1_1(44), 43);
  Sum_of_Elements_add_temp_43 <= Sum_of_Elements_add_temp_42 + Sum_of_Elements_add_cast_44;
  Sum_of_Elements_add_cast_45 <= resize(Product_out1_1(45), 43);
  Sum_of_Elements_add_temp_44 <= Sum_of_Elements_add_temp_43 + Sum_of_Elements_add_cast_45;
  Sum_of_Elements_add_cast_46 <= resize(Product_out1_1(46), 43);
  Sum_of_Elements_add_temp_45 <= Sum_of_Elements_add_temp_44 + Sum_of_Elements_add_cast_46;
  Sum_of_Elements_add_cast_47 <= resize(Product_out1_1(47), 43);
  Sum_of_Elements_add_temp_46 <= Sum_of_Elements_add_temp_45 + Sum_of_Elements_add_cast_47;
  Sum_of_Elements_add_cast_48 <= resize(Product_out1_1(48), 43);
  Sum_of_Elements_add_temp_47 <= Sum_of_Elements_add_temp_46 + Sum_of_Elements_add_cast_48;
  Sum_of_Elements_add_cast_49 <= resize(Product_out1_1(49), 43);
  Sum_of_Elements_add_temp_48 <= Sum_of_Elements_add_temp_47 + Sum_of_Elements_add_cast_49;
  Sum_of_Elements_add_cast_50 <= resize(Product_out1_1(50), 43);
  Sum_of_Elements_add_temp_49 <= Sum_of_Elements_add_temp_48 + Sum_of_Elements_add_cast_50;
  Sum_of_Elements_add_cast_51 <= resize(Product_out1_1(51), 43);
  Sum_of_Elements_add_temp_50 <= Sum_of_Elements_add_temp_49 + Sum_of_Elements_add_cast_51;
  Sum_of_Elements_add_cast_52 <= resize(Product_out1_1(52), 43);
  Sum_of_Elements_add_temp_51 <= Sum_of_Elements_add_temp_50 + Sum_of_Elements_add_cast_52;
  Sum_of_Elements_add_cast_53 <= resize(Product_out1_1(53), 43);
  Sum_of_Elements_add_temp_52 <= Sum_of_Elements_add_temp_51 + Sum_of_Elements_add_cast_53;
  Sum_of_Elements_add_cast_54 <= resize(Product_out1_1(54), 43);
  Sum_of_Elements_add_temp_53 <= Sum_of_Elements_add_temp_52 + Sum_of_Elements_add_cast_54;
  Sum_of_Elements_add_cast_55 <= resize(Product_out1_1(55), 43);
  Sum_of_Elements_add_temp_54 <= Sum_of_Elements_add_temp_53 + Sum_of_Elements_add_cast_55;
  Sum_of_Elements_add_cast_56 <= resize(Product_out1_1(56), 43);
  Sum_of_Elements_add_temp_55 <= Sum_of_Elements_add_temp_54 + Sum_of_Elements_add_cast_56;
  Sum_of_Elements_add_cast_57 <= resize(Product_out1_1(57), 43);
  Sum_of_Elements_add_temp_56 <= Sum_of_Elements_add_temp_55 + Sum_of_Elements_add_cast_57;
  Sum_of_Elements_add_cast_58 <= resize(Product_out1_1(58), 43);
  Sum_of_Elements_add_temp_57 <= Sum_of_Elements_add_temp_56 + Sum_of_Elements_add_cast_58;
  Sum_of_Elements_add_cast_59 <= resize(Product_out1_1(59), 43);
  Sum_of_Elements_add_temp_58 <= Sum_of_Elements_add_temp_57 + Sum_of_Elements_add_cast_59;
  Sum_of_Elements_add_cast_60 <= resize(Product_out1_1(60), 43);
  Sum_of_Elements_add_temp_59 <= Sum_of_Elements_add_temp_58 + Sum_of_Elements_add_cast_60;
  Sum_of_Elements_add_cast_61 <= resize(Product_out1_1(61), 43);
  Sum_of_Elements_add_temp_60 <= Sum_of_Elements_add_temp_59 + Sum_of_Elements_add_cast_61;
  Sum_of_Elements_add_cast_62 <= resize(Product_out1_1(62), 43);
  Sum_of_Elements_add_temp_61 <= Sum_of_Elements_add_temp_60 + Sum_of_Elements_add_cast_62;
  Sum_of_Elements_add_cast_63 <= resize(Product_out1_1(63), 43);
  Sum_of_Elements_add_temp_62 <= Sum_of_Elements_add_temp_61 + Sum_of_Elements_add_cast_63;
  Sum_of_Elements_add_cast_64 <= resize(Product_out1_1(64), 43);
  Sum_of_Elements_add_temp_63 <= Sum_of_Elements_add_temp_62 + Sum_of_Elements_add_cast_64;
  Sum_of_Elements_add_cast_65 <= resize(Product_out1_1(65), 43);
  Sum_of_Elements_add_temp_64 <= Sum_of_Elements_add_temp_63 + Sum_of_Elements_add_cast_65;
  Sum_of_Elements_add_cast_66 <= resize(Product_out1_1(66), 43);
  Sum_of_Elements_add_temp_65 <= Sum_of_Elements_add_temp_64 + Sum_of_Elements_add_cast_66;
  Sum_of_Elements_add_cast_67 <= resize(Product_out1_1(67), 43);
  Sum_of_Elements_add_temp_66 <= Sum_of_Elements_add_temp_65 + Sum_of_Elements_add_cast_67;
  Sum_of_Elements_add_cast_68 <= resize(Product_out1_1(68), 43);
  Sum_of_Elements_add_temp_67 <= Sum_of_Elements_add_temp_66 + Sum_of_Elements_add_cast_68;
  Sum_of_Elements_add_cast_69 <= resize(Product_out1_1(69), 43);
  Sum_of_Elements_add_temp_68 <= Sum_of_Elements_add_temp_67 + Sum_of_Elements_add_cast_69;
  Sum_of_Elements_add_cast_70 <= resize(Product_out1_1(70), 43);
  Sum_of_Elements_add_temp_69 <= Sum_of_Elements_add_temp_68 + Sum_of_Elements_add_cast_70;
  Sum_of_Elements_add_cast_71 <= resize(Product_out1_1(71), 43);
  Sum_of_Elements_add_temp_70 <= Sum_of_Elements_add_temp_69 + Sum_of_Elements_add_cast_71;
  Sum_of_Elements_add_cast_72 <= resize(Product_out1_1(72), 43);
  Sum_of_Elements_add_temp_71 <= Sum_of_Elements_add_temp_70 + Sum_of_Elements_add_cast_72;
  Sum_of_Elements_add_cast_73 <= resize(Product_out1_1(73), 43);
  Sum_of_Elements_add_temp_72 <= Sum_of_Elements_add_temp_71 + Sum_of_Elements_add_cast_73;
  Sum_of_Elements_add_cast_74 <= resize(Product_out1_1(74), 43);
  Sum_of_Elements_add_temp_73 <= Sum_of_Elements_add_temp_72 + Sum_of_Elements_add_cast_74;
  Sum_of_Elements_add_cast_75 <= resize(Product_out1_1(75), 43);
  Sum_of_Elements_add_temp_74 <= Sum_of_Elements_add_temp_73 + Sum_of_Elements_add_cast_75;
  Sum_of_Elements_add_cast_76 <= resize(Product_out1_1(76), 43);
  Sum_of_Elements_add_temp_75 <= Sum_of_Elements_add_temp_74 + Sum_of_Elements_add_cast_76;
  Sum_of_Elements_add_cast_77 <= resize(Product_out1_1(77), 43);
  Sum_of_Elements_add_temp_76 <= Sum_of_Elements_add_temp_75 + Sum_of_Elements_add_cast_77;
  Sum_of_Elements_add_cast_78 <= resize(Product_out1_1(78), 43);
  Sum_of_Elements_add_temp_77 <= Sum_of_Elements_add_temp_76 + Sum_of_Elements_add_cast_78;
  Sum_of_Elements_add_cast_79 <= resize(Product_out1_1(79), 43);
  Sum_of_Elements_add_temp_78 <= Sum_of_Elements_add_temp_77 + Sum_of_Elements_add_cast_79;
  Sum_of_Elements_add_cast_80 <= resize(Product_out1_1(80), 43);
  Sum_of_Elements_add_temp_79 <= Sum_of_Elements_add_temp_78 + Sum_of_Elements_add_cast_80;
  Sum_of_Elements_add_cast_81 <= resize(Product_out1_1(81), 43);
  Sum_of_Elements_add_temp_80 <= Sum_of_Elements_add_temp_79 + Sum_of_Elements_add_cast_81;
  Sum_of_Elements_add_cast_82 <= resize(Product_out1_1(82), 43);
  Sum_of_Elements_add_temp_81 <= Sum_of_Elements_add_temp_80 + Sum_of_Elements_add_cast_82;
  Sum_of_Elements_add_cast_83 <= resize(Product_out1_1(83), 43);
  Sum_of_Elements_add_temp_82 <= Sum_of_Elements_add_temp_81 + Sum_of_Elements_add_cast_83;
  Sum_of_Elements_add_cast_84 <= resize(Product_out1_1(84), 43);
  Sum_of_Elements_add_temp_83 <= Sum_of_Elements_add_temp_82 + Sum_of_Elements_add_cast_84;
  Sum_of_Elements_add_cast_85 <= resize(Product_out1_1(85), 43);
  Sum_of_Elements_add_temp_84 <= Sum_of_Elements_add_temp_83 + Sum_of_Elements_add_cast_85;
  Sum_of_Elements_add_cast_86 <= resize(Product_out1_1(86), 43);
  Sum_of_Elements_add_temp_85 <= Sum_of_Elements_add_temp_84 + Sum_of_Elements_add_cast_86;
  Sum_of_Elements_add_cast_87 <= resize(Product_out1_1(87), 43);
  Sum_of_Elements_add_temp_86 <= Sum_of_Elements_add_temp_85 + Sum_of_Elements_add_cast_87;
  Sum_of_Elements_add_cast_88 <= resize(Product_out1_1(88), 43);
  Sum_of_Elements_add_temp_87 <= Sum_of_Elements_add_temp_86 + Sum_of_Elements_add_cast_88;
  Sum_of_Elements_add_cast_89 <= resize(Product_out1_1(89), 43);
  Sum_of_Elements_add_temp_88 <= Sum_of_Elements_add_temp_87 + Sum_of_Elements_add_cast_89;
  Sum_of_Elements_add_cast_90 <= resize(Product_out1_1(90), 43);
  Sum_of_Elements_add_temp_89 <= Sum_of_Elements_add_temp_88 + Sum_of_Elements_add_cast_90;
  Sum_of_Elements_add_cast_91 <= resize(Product_out1_1(91), 43);
  Sum_of_Elements_add_temp_90 <= Sum_of_Elements_add_temp_89 + Sum_of_Elements_add_cast_91;
  Sum_of_Elements_add_cast_92 <= resize(Product_out1_1(92), 43);
  Sum_of_Elements_add_temp_91 <= Sum_of_Elements_add_temp_90 + Sum_of_Elements_add_cast_92;
  Sum_of_Elements_add_cast_93 <= resize(Product_out1_1(93), 43);
  Sum_of_Elements_add_temp_92 <= Sum_of_Elements_add_temp_91 + Sum_of_Elements_add_cast_93;
  Sum_of_Elements_add_cast_94 <= resize(Product_out1_1(94), 43);
  Sum_of_Elements_add_temp_93 <= Sum_of_Elements_add_temp_92 + Sum_of_Elements_add_cast_94;
  Sum_of_Elements_add_cast_95 <= resize(Product_out1_1(95), 43);
  Sum_of_Elements_add_temp_94 <= Sum_of_Elements_add_temp_93 + Sum_of_Elements_add_cast_95;
  Sum_of_Elements_add_cast_96 <= resize(Product_out1_1(96), 43);
  Sum_of_Elements_add_temp_95 <= Sum_of_Elements_add_temp_94 + Sum_of_Elements_add_cast_96;
  Sum_of_Elements_add_cast_97 <= resize(Product_out1_1(97), 43);
  Sum_of_Elements_add_temp_96 <= Sum_of_Elements_add_temp_95 + Sum_of_Elements_add_cast_97;
  Sum_of_Elements_add_cast_98 <= resize(Product_out1_1(98), 43);
  Sum_of_Elements_add_temp_97 <= Sum_of_Elements_add_temp_96 + Sum_of_Elements_add_cast_98;
  Sum_of_Elements_add_cast_99 <= resize(Product_out1_1(99), 43);
  Sum_of_Elements_out1 <= Sum_of_Elements_add_temp_97 + Sum_of_Elements_add_cast_99;

  Constant_out1 <= to_unsigned(16#0064#, 16);

  Divide_output : PROCESS (Constant_out1, Sum_of_Elements_out1)
    VARIABLE div_temp : signed(43 DOWNTO 0);
    VARIABLE cast : signed(43 DOWNTO 0);
    VARIABLE cast_0 : signed(16 DOWNTO 0);
  BEGIN
    IF Constant_out1 = to_unsigned(16#0000#, 16) THEN 
      IF Sum_of_Elements_out1 < to_signed(0, 43) THEN 
        Divide_out1 <= signed'("1000000000000000000000000000000000000000000");
      ELSE 
        Divide_out1 <= signed'("0111111111111111111111111111111111111111111");
      END IF;
    ELSE 
      cast := resize(Sum_of_Elements_out1, 44);
      cast_0 := signed(resize(Constant_out1, 17));
      div_temp := cast / cast_0;
      IF (div_temp(43) = '0') AND (div_temp(42) /= '0') THEN 
        Divide_out1 <= "0111111111111111111111111111111111111111111";
      ELSIF (div_temp(43) = '1') AND (div_temp(42) /= '1') THEN 
        Divide_out1 <= "1000000000000000000000000000000000000000000";
      ELSE 
        Divide_out1 <= div_temp(42 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Divide_output;


  intdelay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Divide_out1_dlyBalance <= to_signed(0, 43);
      ELSIF enb = '1' THEN
        Divide_out1_dlyBalance <= Divide_out1;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  Discrete_Time_Integrator_reg_iv <= to_signed(0, 43);

  Discrete_Time_Integrator_u_add <= Discrete_Time_Integrator_x_reg + Divide_out1_dlyBalance;

  
  Discrete_Time_Integrator_u_sat <= signed'("0111110100000000000000000000000000000000000") WHEN Discrete_Time_Integrator_u_add > signed'("0111110100000000000000000000000000000000000") ELSE
      to_signed(0, 43) WHEN Discrete_Time_Integrator_u_add < to_signed(0, 43) ELSE
      Discrete_Time_Integrator_u_add;

  
  Discrete_Time_Integrator_reg_toDel <= Discrete_Time_Integrator_u_sat WHEN Compare_To_Constant_out1_fEdge_1 = '0' ELSE
      Discrete_Time_Integrator_reg_iv;

  Discrete_Time_Integrator_reg_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Discrete_Time_Integrator_x_reg <= to_signed(0, 43);
      ELSIF enb = '1' THEN
        Discrete_Time_Integrator_x_reg <= Discrete_Time_Integrator_reg_toDel;
      END IF;
    END IF;
  END PROCESS Discrete_Time_Integrator_reg_lowered_process;


  
  Unit_Delay_Enabled_Synchronous_ectrl <= Unit_Delay_Enabled_Synchronous_out1 WHEN Compare_To_Constant_out1_1 = '0' ELSE
      Discrete_Time_Integrator_x_reg;

  Unit_Delay_Enabled_Synchronous_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Unit_Delay_Enabled_Synchronous_out1 <= to_signed(0, 43);
      ELSIF enb = '1' THEN
        Unit_Delay_Enabled_Synchronous_out1 <= Unit_Delay_Enabled_Synchronous_ectrl;
      END IF;
    END IF;
  END PROCESS Unit_Delay_Enabled_Synchronous_lowered_process;


  Constant2_out1 <= to_unsigned(16#0A28#, 16);

  Divide2_output : PROCESS (Constant2_out1, Unit_Delay_Enabled_Synchronous_out1)
    VARIABLE div_temp1 : signed(43 DOWNTO 0);
    VARIABLE cast1 : signed(43 DOWNTO 0);
    VARIABLE cast_01 : signed(16 DOWNTO 0);
  BEGIN
    IF Constant2_out1 = to_unsigned(16#0000#, 16) THEN 
      IF Unit_Delay_Enabled_Synchronous_out1 < to_signed(0, 43) THEN 
        d2 <= signed'("1000000000000000000000000000000000000000000");
      ELSE 
        d2 <= signed'("0111111111111111111111111111111111111111111");
      END IF;
    ELSE 
      cast1 := resize(Unit_Delay_Enabled_Synchronous_out1, 44);
      cast_01 := signed(resize(Constant2_out1, 17));
      div_temp1 := cast1 / cast_01;
      IF (div_temp1(43) = '0') AND (div_temp1(42) /= '0') THEN 
        d2 <= "0111111111111111111111111111111111111111111";
      ELSIF (div_temp1(43) = '1') AND (div_temp1(42) /= '1') THEN 
        d2 <= "1000000000000000000000000000000000000000000";
      ELSE 
        d2 <= div_temp1(42 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Divide2_output;


  -- Downsample register
  Rate_Transition_ds_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Rate_Transition_ds_out <= to_signed(0, 43);
      ELSIF enb_1_2600_4 = '1' THEN
        Rate_Transition_ds_out <= d2;
      END IF;
    END IF;
  END PROCESS Rate_Transition_ds_process;


  -- Downsample output register
  Rate_Transition_output_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Rate_Transition_out1 <= to_signed(0, 43);
      ELSIF enb_1_2600_0 = '1' THEN
        Rate_Transition_out1 <= Rate_Transition_ds_out;
      END IF;
    END IF;
  END PROCESS Rate_Transition_output_process;


  PipelineRegister1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Rate_Transition_out1_1 <= to_signed(0, 43);
      ELSIF enb_1_2600_0 = '1' THEN
        Rate_Transition_out1_1 <= Rate_Transition_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister1_process;


  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        data_out_tmp <= to_signed(0, 43);
      ELSIF enb_1_2600_0 = '1' THEN
        data_out_tmp <= Rate_Transition_out1_1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  data_out <= std_logic_vector(data_out_tmp);

  
  Compare_To_Zero_out1 <= '1' WHEN Rate_Transition_out1_1 <= to_signed(0, 43) ELSE
      '0';

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb_1_2600_0 = '1' THEN
        Delay2_out1 <= Compare_To_Zero_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  ce_out <= enb_1_2600_1;

  valid_out <= Delay2_out1;

END rtl;

